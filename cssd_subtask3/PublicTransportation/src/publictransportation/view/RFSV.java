/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package publictransportation.view;

import publictransportation.models.Gate;
import publictransportation.models.Set_Of_Gates;
import publictransportation.models.*;
import publictransportation.models.Stop;
import publictransportation.models.zone;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import static java.time.temporal.TemporalQueries.localDate;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gangesh
 */
public class RFSV extends javax.swing.JFrame {

    //private zoneCollection zones = new zoneCollection();
    
    private zone zz = new zone();
    
    private Set_Of_Routes sor=new Set_Of_Routes();
     
    private ArrayList<Stop> allstops = new ArrayList<Stop>();
    
    ArrayList<Stop> rstops = new ArrayList<Stop>();
    
    private Set_Of_Costs soc= new Set_Of_Costs();
    
    private Set_Of_Offers sof = new Set_Of_Offers();
    
    ArrayList<Set_Of_Gates> sog = new ArrayList<Set_Of_Gates>();
    
    public RFSV() {
        initComponents();
        
        this.toZonetable();
        this.toStoptable();
        this.toRoutetable();
        this.tofaretable();
        this.toOffertable();
        this.toGateBatchTable();
        this.toGateTable();
        
        newZone.setEnabled(false);
        updateZone.setEnabled(false);
        
        this.toRouteCombo();
        this.toStopNames();
        this.toZonesCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        routes = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        routename = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        stopscombo = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        selectedstps = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        routetype = new javax.swing.JComboBox();
        addRoute = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        routetable = new javax.swing.JTable();
        routeid = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        zonescombo = new javax.swing.JComboBox();
        addstops = new javax.swing.JButton();
        fare = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        journeyID = new javax.swing.JTextField();
        routecombo = new javax.swing.JComboBox();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        startstop = new javax.swing.JComboBox();
        addcost = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        endstop = new javax.swing.JComboBox();
        jLabel30 = new javax.swing.JLabel();
        cost = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        faretable = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        offertable = new javax.swing.JTable();
        jPanel12 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        offerid = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        offerdiscount = new javax.swing.JTextField();
        addOffer = new javax.swing.JButton();
        offercriteria = new javax.swing.JTextField();
        stops = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        gateid = new javax.swing.JTextField();
        gateState = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        setGatesID = new javax.swing.JComboBox();
        addGate = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        gateTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        batchid = new javax.swing.JTextField();
        stopNames = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        addGatebatch = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        stpName = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        gateBatchTable = new javax.swing.JTable();
        vehicles = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        stopID = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        stopName = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        stopLat = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        stopLon = new javax.swing.JTextField();
        addStop = new javax.swing.JButton();
        zoneIDs = new javax.swing.JComboBox();
        jScrollPane8 = new javax.swing.JScrollPane();
        stopTable = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        zoneTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        zoneidtxt = new javax.swing.JTextField();
        addZone = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        zonenametxt = new javax.swing.JTextField();
        newZone = new javax.swing.JButton();
        updateZone = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Routes Management");
        jLabel2.setFocusable(false);
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Route ID:");

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Route Name:");

        jLabel9.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Stops:");

        stopscombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopscomboActionPerformed(evt);
            }
        });

        selectedstps.setColumns(20);
        selectedstps.setRows(5);
        jScrollPane2.setViewportView(selectedstps);

        jLabel10.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Route Type:");

        routetype.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Bus", "Train" }));

        addRoute.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        addRoute.setText("Submit");
        addRoute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRouteActionPerformed(evt);
            }
        });

        routetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Route ID", "Route Name", "Route Type"
            }
        ));
        jScrollPane3.setViewportView(routetable);

        jLabel25.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Zone:");

        zonescombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                zonescomboItemStateChanged(evt);
            }
        });
        zonescombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                zonescomboMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                zonescomboMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                zonescomboMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                zonescomboMouseReleased(evt);
            }
        });
        zonescombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zonescomboActionPerformed(evt);
            }
        });

        addstops.setFont(new java.awt.Font("Calibri", 0, 10)); // NOI18N
        addstops.setText("+");
        addstops.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addstopsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(routename, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                    .addComponent(routeid)))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(stopscombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addRoute, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                                .addComponent(routetype, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(zonescombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addstops, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(77, 77, 77)))
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(routeid, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(routename, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(zonescombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stopscombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addstops, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(routetype, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addRoute, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(87, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout routesLayout = new javax.swing.GroupLayout(routes);
        routes.setLayout(routesLayout);
        routesLayout.setHorizontalGroup(
            routesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(routesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        routesLayout.setVerticalGroup(
            routesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Routes", routes);

        jPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel11.setName(""); // NOI18N

        jLabel26.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("Journey ID:");

        routecombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                routecomboActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("Route ID:");

        jLabel28.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("Start Destination:");

        startstop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startstopMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                startstopMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                startstopMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                startstopMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                startstopMouseReleased(evt);
            }
        });
        startstop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startstopActionPerformed(evt);
            }
        });

        addcost.setText("Submit");
        addcost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addcostActionPerformed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("End Destination:");

        jLabel30.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("Cost:");

        jLabel31.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("Set Fare Rates");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cost)
                            .addComponent(addcost, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(endstop, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel11Layout.createSequentialGroup()
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(34, 34, 34)
                            .addComponent(journeyID))
                        .addGroup(jPanel11Layout.createSequentialGroup()
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(34, 34, 34)
                            .addComponent(routecombo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(startstop, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(journeyID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(routecombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startstop, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endstop, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cost, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addcost, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );

        faretable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Journey ID", "Start Destination", "End Destination", "Cost"
            }
        ));
        jScrollPane1.setViewportView(faretable);

        offertable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Offer ID", "Offer Criteria", "Discount"
            }
        ));
        jScrollPane6.setViewportView(offertable);

        jPanel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel32.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setText("Set Offers");

        jLabel33.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel33.setText("Offer ID:");

        jLabel34.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setText("Offer Criteria:");

        jLabel35.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel35.setText("Discount:");

        addOffer.setText("Submit");
        addOffer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOfferActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(offerdiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addOffer, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel12Layout.createSequentialGroup()
                                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(offercriteria, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel12Layout.createSequentialGroup()
                                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(offerid, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel32)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(offerid, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(offercriteria, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(offerdiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addOffer, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout fareLayout = new javax.swing.GroupLayout(fare);
        fare.setLayout(fareLayout);
        fareLayout.setHorizontalGroup(
            fareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fareLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(fareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE))
                .addContainerGap())
        );
        fareLayout.setVerticalGroup(
            fareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fareLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fareLayout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(fareLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Fare", fare);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Gate Control");
        jLabel3.setFocusable(false);
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setName(""); // NOI18N

        jLabel11.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Gate ID:");

        gateState.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Active", "Closed" }));

        jLabel12.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("State:");

        jLabel13.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Gate Batch:");

        addGate.setText("Submit");
        addGate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addGateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(34, 34, 34)
                            .addComponent(gateid))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(34, 34, 34)
                            .addComponent(gateState, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addGate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(setGatesID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gateid, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gateState, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(setGatesID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addGate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gateTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Gate Batch", "Gate ID", "State"
            }
        ));
        jScrollPane4.setViewportView(gateTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Gate Batch");
        jLabel4.setFocusable(false);
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setName(""); // NOI18N

        jLabel14.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Batch ID:");

        stopNames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopNamesActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Stop ID:");

        addGatebatch.setText("Submit");
        addGatebatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addGatebatchActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Stop Name:");

        stpName.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        stpName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stpName.setText("Stop ID:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(batchid))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addGatebatch, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stopNames, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stpName, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(batchid, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stopNames, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stpName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(addGatebatch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        gateBatchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Gate Batch ID", "Stop ID"
            }
        ));
        jScrollPane5.setViewportView(gateBatchTable);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout stopsLayout = new javax.swing.GroupLayout(stops);
        stops.setLayout(stopsLayout);
        stopsLayout.setHorizontalGroup(
            stopsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stopsLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(23, 23, 23))
        );
        stopsLayout.setVerticalGroup(
            stopsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Gate Control", stops);

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Stop");
        jLabel5.setFocusable(false);
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel8.setName(""); // NOI18N

        jLabel16.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Stop ID :");

        jLabel19.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Stop Name :");

        jLabel20.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Zone ID :");

        jLabel21.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Latitude :");

        jLabel22.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Longtitude :");

        addStop.setText("Submit");
        addStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(stopLat, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(stopID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addStop, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stopLon, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(zoneIDs, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stopName, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stopID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stopName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zoneIDs, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stopLat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stopLon, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addStop, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        stopTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Stop ID", "Zone ID", "Stop Name"
            }
        ));
        jScrollPane8.setViewportView(stopTable);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 16, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        zoneTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Zone ID", "Zone Name"
            }
        ));
        zoneTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                zoneTableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(zoneTable);

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Zone");
        jLabel6.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel6.setFocusable(false);
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jPanel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel10.setName(""); // NOI18N

        jLabel23.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Zone ID:");

        addZone.setText("Submit");
        addZone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addZoneActionPerformed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("Zone Name:");

        newZone.setText("New");
        newZone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newZoneActionPerformed(evt);
            }
        });

        updateZone.setText("Update");
        updateZone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateZoneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(zonenametxt, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(zoneidtxt))))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(newZone, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addZone, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateZone, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zoneidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zonenametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addZone, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newZone, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateZone, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout vehiclesLayout = new javax.swing.GroupLayout(vehicles);
        vehicles.setLayout(vehiclesLayout);
        vehiclesLayout.setHorizontalGroup(
            vehiclesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vehiclesLayout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        vehiclesLayout.setVerticalGroup(
            vehiclesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Stops", vehicles);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        setSize(new java.awt.Dimension(930, 542));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addGatebatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addGatebatchActionPerformed
        
        if(batchid.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null,"Please enter an ID");
        }
        else
        {
        Set_Of_Gates sg = new Set_Of_Gates(batchid.getText(),stopNames.getSelectedItem().toString());
        sog.add(sg);
        this.serializeSetOfGates();
        this.toGateBatchTable();
        batchid.setText("");
        stopNames.setSelectedIndex(0);
        JOptionPane.showMessageDialog(null,"New Gate batch Created");
        }
    }//GEN-LAST:event_addGatebatchActionPerformed

    private void toZonetable()
    {
        DefaultTableModel model=(DefaultTableModel) zoneTable.getModel();
        model.setRowCount(0);
        this.deserializeZones();
        zoneTable.removeAll();
        
        //zonescombo.removeAllItems();    //removing all existing zone names
                
        for(int i=0;i<zz.size();i++)
        {
            model.addRow(new Object[] {zz.elementAt(i).getZoneId(),zz.elementAt(i).getZoneName()});
            //assigning zone names to the combo box
            //zonescombo.addItem(zz.elementAt(i).getZoneName());
        }
    }
    
    private void toStoptable()
    {
        DefaultTableModel model=(DefaultTableModel) stopTable.getModel();
        model.setRowCount(0);
        this.deserializeStops();
        stopTable.removeAll();
       //            
            
        for(int i=0;i<allstops.size();i++)
        {
            model.addRow(new Object[] {allstops.get(i).getStopID(),allstops.get(i).getZoneID(),allstops.get(i).getStopName()});
            //
        }
    }
    
    private void toGateBatchTable()
    {
        setGatesID.removeAllItems();
        DefaultTableModel model=(DefaultTableModel) gateBatchTable.getModel();
        model.setRowCount(0);
        this.deserializeSetOfGates();
        gateBatchTable.removeAll();
       //            
            
        for(int i=0;i<sog.size();i++)
        {
            model.addRow(new Object[] {sog.get(i).getGatesID(),sog.get(i).getStopID()});
            setGatesID.addItem(sog.get(i).getGatesID());
        }
    }
    
    private void toGateTable()
    {
        //setGatesID.removeAllItems();
        DefaultTableModel model=(DefaultTableModel) gateTable.getModel();
        model.setRowCount(0);
        this.deserializeSetOfGates();
        gateTable.removeAll();
       //            
            
        for(int i=0;i<sog.size();i++)
        {
            ArrayList<Gate> getgates = new ArrayList<Gate>();
            getgates=sog.get(i).getGates();
            
            for(int j=0;j<getgates.size();j++)
            {
                Gate myg=new Gate();
                myg=getgates.get(j);
                model.addRow(new Object[] {sog.get(i).getGatesID(),myg.getGateID(),myg.getState()});
            }
            
            
        }
    }
    
    private void toStopNames()
    {
        stopNames.removeAllItems();
        for(int i=0;i<allstops.size();i++)
        {
            stopNames.addItem(allstops.get(i).getStopID());
        }
    }
    
    private void toRoutetable()
    {
        DefaultTableModel model=(DefaultTableModel) routetable.getModel();
        model.setRowCount(0);
        this.deserializeSOR();
        routetable.removeAll();
        
        
        
        for(int i=0;i<sor.size();i++)
        {
            model.addRow(new Object[] {sor.get(i).getRoute_ID(),sor.get(i).getName(),sor.get(i).getRoute_type()});
            
            
        }
    }
    
    private void toRouteCombo()
    {
        routecombo.removeAllItems();
        for(int i =0;i<sor.size();i++)
        {
            Route rr=new Route();
            rr=sor.get(i);
            routecombo.addItem(rr.getName());
        }
    }
    
    private void toZonesCombo()
    {
        zonescombo.removeAllItems();
        for(int i=0;i<zz.size();i++)
        {
            zonescombo.addItem(zz.elementAt(i).getZoneName());
            //model.addRow(new Object[] {zz.elementAt(i).getZoneId(),zz.elementAt(i).getZoneName()});
           
        }
    }
    
    private void tofaretable()
    {
        DefaultTableModel model=(DefaultTableModel) faretable.getModel();
        model.setRowCount(0);
        this.deserializeSOC();
        faretable.removeAll();
        
        
        
        for(int i=0;i<soc.size();i++)
        {
            model.addRow(new Object[] {soc.get(i).getJourneyId(),soc.get(i).getSourceStop(),soc.get(i).getDestinationStop(),soc.get(i).getCost()});            
        }
    }
    
    private void toOffertable()
    {
        DefaultTableModel model=(DefaultTableModel) offertable.getModel();
        model.setRowCount(0);
        this.deserializeSOF();
        offertable.removeAll();
        
        
        
        for(int i=0;i<sof.size();i++)
        {
            model.addRow(new Object[] {sof.get(i).getOfferId(),sof.get(i).getOfferCriteria(),sof.get(i).getDiscount()});            
        }
    }
    
    private void deserializeZones()
    {
        zz.removeAllElements();
        zoneIDs.removeAllItems();
        //zonescombo.removeAllItems();
        try{
            String file="zone.ser";
            FileInputStream fis = new FileInputStream(file);
            ObjectInputStream ois = new ObjectInputStream(fis);
            
            //copying the array list storedin the file to the zz arrayList Object
            zone pp=(zone)ois.readObject();
            for (int i =0;i<pp.size();i++)
            {
                zone deszone = new zone();
                deszone.setIdName(pp.elementAt(i).getZoneId(), pp.elementAt(i).getZoneName());
                zz.addZone(deszone);
                
                //Displaying all zoneIDs in the combo box
                zoneIDs.addItem(pp.elementAt(i).getZoneId());
                //zonescombo.addItem(pp.elementAt(i).getZoneName());
            }
                        
            fis.close();
            ois.close();
        }
        catch(Exception e)
        {
            System.out.println("Error in RFSV.java class, deserializeZones Method");
            System.out.println(e);
            
        }
        
    }
    
    private void serializeZones()
    {
        try{
            String file="zone.ser";
            FileOutputStream fos = new FileOutputStream(file);
            ObjectOutputStream oos= new ObjectOutputStream(fos);
            oos.writeObject(zz);
            oos.close();
            fos.close();
            
        }
        catch(Exception e)
        {
            System.out.println("Error in RFSV.java class, serializeZones Method");
            System.out.println(e);
        }
    }
    
    private void serializeSOR()
    {
        try{
            String file="Routes.ser";
            FileOutputStream fos = new FileOutputStream(file);
            ObjectOutputStream oos= new ObjectOutputStream(fos);
            oos.writeObject(sor);
            oos.close();
            fos.close();
            
        }
        catch(Exception e)
        {
            System.out.println("Error in RFSV.java class, serializeSOR Method");
            System.out.println(e);
        }
    }
    
    private void deserializeSOR()
    {
        sor.clear();
        try{
            String file="Routes.ser";
            FileInputStream fis = new FileInputStream(file);
            ObjectInputStream ois = new ObjectInputStream(fis);
            
            //copying the array list storedin the file to the zz arrayList Object
            Set_Of_Routes pp=(Set_Of_Routes)ois.readObject();
            
            for (int i =0;i<pp.size();i++)
            {
                sor.add(pp.get(i));
            }
                        
            fis.close();
            ois.close();
        }
        catch(Exception e)
        {
            System.out.println("Error in RFSV.java class, deserializeSOR Method");
            System.out.println(e);
            
        }
        
    }
    
    private void serializeSOC()
    {
        try{
            String file="Costs.ser";
            FileOutputStream fos = new FileOutputStream(file);
            ObjectOutputStream oos= new ObjectOutputStream(fos);
            oos.writeObject(soc);
            oos.close();
            fos.close();
            
        }
        catch(Exception e)
        {
            System.out.println("Error in RFSV.java class, serializeSOC Method");
            System.out.println(e);
        }
    }
    
    private void deserializeSOC()
    {
        soc.clear();
        try{
            String file="Costs.ser";
            FileInputStream fis = new FileInputStream(file);
            ObjectInputStream ois = new ObjectInputStream(fis);
            
            //copying the array list storedin the file to the zz arrayList Object
            Set_Of_Costs pp=(Set_Of_Costs)ois.readObject();
            
            for (int i =0;i<pp.size();i++)
            {
                soc.add(pp.get(i));
            }
                        
            fis.close();
            ois.close();
        }
        catch(Exception e)
        {
            System.out.println("Error in RFSV.java class, deserializeSOC Method");
            System.out.println(e);
            
        }
        
    }
    
    private void serializeSOF()
    {
        try{
            String file="Offers.ser";
            FileOutputStream fos = new FileOutputStream(file);
            ObjectOutputStream oos= new ObjectOutputStream(fos);
            oos.writeObject(sof);
            oos.close();
            fos.close();
            
        }
        catch(Exception e)
        {
            System.out.println("Error in RFSV.java class, serializeSOF Method");
            System.out.println(e);
        }
    }
    
    private void deserializeSOF()
    {
        sof.clear();
        try{
            String file="Offers.ser";
            FileInputStream fis = new FileInputStream(file);
            ObjectInputStream ois = new ObjectInputStream(fis);
            
            //copying the array list storedin the file to the zz arrayList Object
            Set_Of_Offers pp=(Set_Of_Offers)ois.readObject();
            
            for (int i =0;i<pp.size();i++)
            {
                sof.add(pp.get(i));
            }
                        
            fis.close();
            ois.close();
        }
        catch(Exception e)
        {
            System.out.println("Error in RFSV.java class, deserializeSOF Method");
            System.out.println(e);
            
        }
        
    }
    
    private void serializeStops()
    {
        try{
            String file="stops.ser";
            FileOutputStream fos = new FileOutputStream(file);
            ObjectOutputStream oos= new ObjectOutputStream(fos);
            oos.writeObject(allstops);
            oos.close();
            fos.close();
            
        }
        catch(Exception e)
        {
            System.out.println("Error in RFSV.java class, serializeStops Method");
            System.out.println(e);
        }
    }
    
    private void deserializeStops()
    {
        //stopscombo.removeAllItems();
        allstops.clear();
        try{
            String file="stops.ser";
            FileInputStream fis = new FileInputStream(file);
            ObjectInputStream ois = new ObjectInputStream(fis);
            
            //copying the array list storedin the file to the zz arrayList Object
            //Stop fstop=(Stop)ois.readObject();
//            ArrayList<Stop> readstops = new ArrayList<Stop>();
//            readstops=(ArrayList<Stop>)ois.readObject();
            
            allstops=(ArrayList)ois.readObject();
//            for(int i=0;i<allstops.size();i++)
//            {
//                Stop cstop = new Stop();
//                cstop=allstops.get(i);
//                //stopscombo.addItem(cstop.getStopName());
//            }
                        
            fis.close();
            ois.close();
        }
        catch(Exception e)
        {
            System.out.println("Error in RFSV.java class, deserializeStops Method");
            System.out.println(e);
            
        }
        
    }
    
    private void serializeSetOfGates()
    {
        try{
            String file="GateSet.ser";
            FileOutputStream fos = new FileOutputStream(file);
            ObjectOutputStream oos= new ObjectOutputStream(fos);
            oos.writeObject(sog);
            oos.close();
            fos.close();
            
        }
        catch(Exception e)
        {
            System.out.println("Error in RFSV.java class, serializeStops Method");
            System.out.println(e);
        }
    }
    
    private void deserializeSetOfGates()
    {
        //stopscombo.removeAllItems();
        sog.clear();
        try{
            String file="GateSet.ser";
            FileInputStream fis = new FileInputStream(file);
            ObjectInputStream ois = new ObjectInputStream(fis);
           sog=(ArrayList)ois.readObject();
                       
            fis.close();
            ois.close();
        }
        catch(Exception e)
        {
            System.out.println("Error in RFSV.java class, deserializeStops Method");
            System.out.println(e);
            
        }
        
    }
    
    private boolean checkZoneid()
    {
        for(int i=0;i<zz.size();i++)
        {
            zone z2 = new zone();
            z2.setIdName(zz.elementAt(i).getZoneId(),zz.elementAt(i).getZoneName());
            //System.out.println("check zone id = "+zoneidtxt.getText());
            if((z2.getZoneId().compareTo(zoneidtxt.getText()))==0)
            {
                JOptionPane.showMessageDialog(null,"The entered Zone ID has already been assigned to another zone");
                return false;
            }
        }
        return true;
    }
    
    
    private void addZoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addZoneActionPerformed
        String zoneid =zoneidtxt.getText() ;
        String zonename = zonenametxt.getText();
        //System.out.println("Values passed by textboxes: "+zoneid+" name: "+zonename);
        
        this.deserializeZones();
        if(zoneid.compareTo("")==0 || zonename.compareTo("")==0)
        {
            JOptionPane.showMessageDialog(null,"Please fill all the fields");
        }
        else
        {
        if(this.checkZoneid()==true)
        {
            zone newz = new zone();
            newz.setIdName(zoneid,zonename);
            zz.addZone(newz);
            
            zonescombo.addItem(zonename);
        
            this.serializeZones();
        
            this.toZonetable();
            JOptionPane.showMessageDialog(null,"Zone successfully Added");
        
            for(int i=0;i<zz.size();i++)
            {
                zone z2 = new zone();
                z2.setIdName(zz.elementAt(i).getZoneId(),zz.elementAt(i).getZoneName());
                System.out.println("ZONE ID : "+z2.getZoneId()+" ZONE NAME: "+z2.getZoneName());
                
            }
            
            System.out.println("-----------------------------------------");
            
            zoneidtxt.setText("");
            zonenametxt.setText("");
        }
        
        }
        
    }//GEN-LAST:event_addZoneActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    private void zoneTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_zoneTableMouseClicked
        int zoneRow=zoneTable.getSelectedRow();
        
        String zoneID = (String) zoneTable.getValueAt(zoneRow, 0);
        String zoneName=(String) zoneTable.getValueAt(zoneRow, 1);
        
        zoneidtxt.setText(zoneID);
        zonenametxt.setText(zoneName);
        
        newZone.setEnabled(true);
        updateZone.setEnabled(true);
        addZone.setEnabled(false);
        zoneidtxt.setEnabled(false);
        //System.out.println("Selected zone ID: "+zoneID);
        
    }//GEN-LAST:event_zoneTableMouseClicked

    private void newZoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newZoneActionPerformed
        zoneidtxt.setEnabled(true);
        zoneidtxt.setText("");
        zonenametxt.setText("");
        newZone.setEnabled(false);
        updateZone.setEnabled(false);
        addZone.setEnabled(true);
    }//GEN-LAST:event_newZoneActionPerformed

    private void updateZoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateZoneActionPerformed
        if(zonenametxt.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null,"Please provide a name for the zone");
        }
        else
        {
        for(int i=0;i<zz.size();i++)
        {
            zone z2 = new zone();
            z2.setIdName(zz.elementAt(i).getZoneId(),zz.elementAt(i).getZoneName());
            //System.out.println("check zone id = "+zoneidtxt.getText());
            if((z2.getZoneId().compareTo(zoneidtxt.getText()))==0)
            {
                zz.removeZone(z2.getZoneId());
                //zone z3 = new zone();
                z2.editZone(zoneidtxt.getText(), zonenametxt.getText());
                zz.addZone(z2);
                this.serializeZones();
        
                this.toZonetable();
            }
        }
        JOptionPane.showMessageDialog(null,"Zone details successfully updated");
        
        for(int i=0;i<zz.size();i++)
            {
                zone z2 = new zone();
                z2.setIdName(zz.elementAt(i).getZoneId(),zz.elementAt(i).getZoneName());
                System.out.println("ZONE ID : "+z2.getZoneId()+" ZONE NAME: "+z2.getZoneName());
            }
            
            System.out.println("-----------------------------------------");
        }
    }//GEN-LAST:event_updateZoneActionPerformed

    private void addStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStopActionPerformed
        this.deserializeStops();
        
        if(stopID.getText().isEmpty() || stopName.getText().isEmpty() || stopLat.getText().isEmpty() || stopLon.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null,"Please fill all the fields");
        }
        else
        {
        Stop ss=new Stop();
        ss.newStop(stopID.getText(),zoneIDs.getSelectedItem().toString(), stopName.getText(),  Double.parseDouble(stopLat.getText()), Double.parseDouble(stopLon.getText()));
        //ss.addStop(ss);
        
        allstops.add(ss);
        //System.out.println("Viewing all stops: "+viewstops);
        
        this.serializeStops();
        this.toStoptable();
        
        JOptionPane.showMessageDialog(null,"Stop has been added to the Specified Zone");
        
        stopID.setText("");
        stopName.setText("");
        stopLat.setText("");
        stopLon.setText("");
        
        
        
        for(int i=0;i<allstops.size();i++)
        {
            Stop dstop = new Stop();
            dstop=allstops.get(i);
            System.out.println("Stop ID: "+dstop.getStopID()+" Stop Name: "+dstop.getStopName());
        }   
        System.out.println("-----------------------------------------");
        }
    }//GEN-LAST:event_addStopActionPerformed

    private void zonescomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zonescomboActionPerformed
        zone czone=new zone();
        czone=zz.searchZone(zonescombo.getSelectedItem().toString());
        
        ArrayList<Stop> selstops = new ArrayList<Stop>();
        
        for(int i=0;i<allstops.size();i++)
        {
            Stop cstop = new Stop();
            cstop=allstops.get(i);
            if((czone.getZoneId().equals(cstop.getZoneID())))
            {
                selstops.add(cstop);
            }
            
        }
        
        stopscombo.removeAllItems();
        for(int i=0;i<selstops.size();i++)
        {
            Stop onestop= new Stop();
            onestop=selstops.get(i);
            stopscombo.addItem(onestop.getStopName());
        }
    }//GEN-LAST:event_zonescomboActionPerformed

    private void addRouteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRouteActionPerformed
        
        if(routeid.getText().isEmpty() || routename.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null,"Please fill all the fields");
        }
        if(rstops.size()<2)
        {
            JOptionPane.showMessageDialog(null,"Multiple stops should be assigned to the route");
        }
        else
        {
        Route r = new Route(routeid.getText(),routename.getText(), routetype.getSelectedItem().toString());
        //Stop selstop=new Stop();
        
        for(int i=0;i<rstops.size();i++)
        {
            Stop cstop = new Stop();
            cstop=rstops.get(i);
            r.addStops(cstop);
        }
        
        routecombo.addItem(r.getName());
        sor.addNewRoute(r);
        //this.toRouteCombo();
        
        this.serializeSOR();
        
        rstops.clear();
        routeid.setText("");
        routename.setText("");
        selectedstps.setText("");
        
        JOptionPane.showMessageDialog(null,"Route has been added Successfully");
        
        this.deserializeSOR();
        
        for(int i=0;i<sor.size();i++)
        {
            Route rr;
            rr=sor.get(i);
            System.out.println("Route ID: "+rr.getRoute_ID()+" Route Name: "+rr.getName()+" Route Type: "+rr.getRoute_type());
            
        }
        System.out.println("-----------------------------------------");
        this.toRoutetable();
        }
    }//GEN-LAST:event_addRouteActionPerformed

    private void addstopsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addstopsActionPerformed
        
        for(int i =0; i<allstops.size();i++)
        {
            Stop cstop = new Stop();
            cstop=allstops.get(i);
            //System.out.println("combo box seleted stop name: "+stopscombo.getSelectedItem().toString());
            if(cstop.getStopName().equals(stopscombo.getSelectedItem().toString()))
            {
                //System.out.println("combo box seleted stop name inside: "+cstop.getStopName());
                rstops.add(cstop);
            }
        }
        
        selectedstps.setText("");
        
        for(int i=0;i<rstops.size();i++)
        {
            Stop cstop = new Stop();
            cstop=rstops.get(i);
            selectedstps.append(cstop.getStopName()+"\n");
        }
        System.out.println("-------------------------------");
    }//GEN-LAST:event_addstopsActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
//        this.deserializeZones();
//        
//        zone czone=new zone();
//        czone=zz.searchZone(zonescombo.getSelectedItem().toString());
//        
//        ArrayList<Stop> selstops = new ArrayList<Stop>();
//        
//        for(int i=0;i<allstops.size();i++)
//        {
//            Stop cstop = new Stop();
//            cstop=allstops.get(i);
//            if((czone.getZoneId().equals(cstop.getZoneID())))
//            {
//                selstops.add(cstop);
//            }
//            
//        }
//        
//        stopscombo.removeAllItems();
//        for(int i=0;i<selstops.size();i++)
//        {
//            Stop onestop= new Stop();
//            onestop=selstops.get(i);
//            stopscombo.addItem(onestop.getStopName());
//        }
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void zonescomboMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_zonescomboMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_zonescomboMouseReleased

    private void zonescomboMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_zonescomboMouseExited
        
    }//GEN-LAST:event_zonescomboMouseExited

    private void zonescomboMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_zonescomboMouseClicked
        
    }//GEN-LAST:event_zonescomboMouseClicked

    private void zonescomboMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_zonescomboMousePressed
        
    }//GEN-LAST:event_zonescomboMousePressed

    private void zonescomboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_zonescomboItemStateChanged
       
    }//GEN-LAST:event_zonescomboItemStateChanged

    private void stopscomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopscomboActionPerformed
        
    }//GEN-LAST:event_stopscomboActionPerformed

    private void routecomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_routecomboActionPerformed
//        zone czone=new zone();
//        czone=zz.searchZone(zonescombo.getSelectedItem().toString());
          
          Route r1=new Route();
          r1=sor.getStopsinRoute(routecombo.getSelectedItem().toString());
          
          ArrayList<Stop> routestops = new ArrayList<Stop>();
          for(int i=0;i<r1.getStops().size();i++)
          {
              routestops.add(r1.getStops().get(i));
          }
         
          
          startstop.removeAllItems();
          
          
          for(int i=0;i<routestops.size();i++)
          {
              startstop.addItem(routestops.get(i).getStopName());
          }
//        
//        for(int i=0;i<allstops.size();i++)
//        {
//            Stop cstop = new Stop();
//            cstop=allstops.get(i);
//            if((czone.getZoneId().equals(cstop.getZoneID())))
//            {
//                selstops.add(cstop);
//            }
//            
//        }
//        
//        stopscombo.removeAllItems();
//        for(int i=0;i<selstops.size();i++)
//        {
//            Stop onestop= new Stop();
//            onestop=selstops.get(i);
//            stopscombo.addItem(onestop.getStopName());
//        }
    }//GEN-LAST:event_routecomboActionPerformed

    private void startstopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startstopActionPerformed
       
          
          
    }//GEN-LAST:event_startstopActionPerformed

    private void startstopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startstopMouseClicked
        
    }//GEN-LAST:event_startstopMouseClicked

    private void startstopMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startstopMouseExited
        
    }//GEN-LAST:event_startstopMouseExited

    private void startstopMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startstopMousePressed
        
    }//GEN-LAST:event_startstopMousePressed

    private void startstopMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startstopMouseReleased
        
    }//GEN-LAST:event_startstopMouseReleased

    private void startstopMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startstopMouseEntered
        Route r1=new Route();
          r1=sor.getStopsinRoute(routecombo.getSelectedItem().toString());
          
          ArrayList<Stop> routestops = new ArrayList<Stop>();
          for(int i=0;i<r1.getStops().size();i++)
          {
              routestops.add(r1.getStops().get(i));
          }
          
          endstop.removeAllItems();
          for(int i=0;i<routestops.size();i++)
          {
              if(!startstop.getSelectedItem().toString().equals(routestops.get(i).getStopName()))
              {
                  endstop.addItem(routestops.get(i).getStopName());
              }
              
          }
    }//GEN-LAST:event_startstopMouseEntered

    private void addcostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addcostActionPerformed
        
        if(journeyID.getText().isEmpty() || cost.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null,"Please fill all the fields");
        }
        else
        {
        Journey_Cost jc = new Journey_Cost(journeyID.getText(),startstop.getSelectedItem().toString(),endstop.getSelectedItem().toString(),Float.parseFloat(cost.getText()));
        soc.addNewJCost(jc);
        this.serializeSOC();
        this.tofaretable();
        journeyID.setText("");
        cost.setText("");
        JOptionPane.showMessageDialog(null,"Cost for the specified stops has been set");
        }
    }//GEN-LAST:event_addcostActionPerformed

    private void addOfferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOfferActionPerformed
        
        if(offerid.getText().isEmpty() || offercriteria.getText().isEmpty() || offerdiscount.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null,"Please fill all the fields");
        }
        else
        {
        Offer of = new Offer(offerid.getText(),offercriteria.getText(),Float.parseFloat(offerdiscount.getText()));
        sof.createNewOffer(of);
        this.serializeSOF();
        this.toOffertable();
        offerid.setText("");
        offercriteria.setText("");
        offerdiscount.setText("");
        JOptionPane.showMessageDialog(null,"New Offer has been set");
        }
        
    }//GEN-LAST:event_addOfferActionPerformed

    private void stopNamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopNamesActionPerformed
        for(int i =0;i<allstops.size();i++)
        {
            if(stopNames.getSelectedItem().toString().equals(allstops.get(i).getStopID()))
            {
                stpName.setText(allstops.get(i).getStopName());
            }
        }
    }//GEN-LAST:event_stopNamesActionPerformed

    private void addGateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addGateActionPerformed

        if(gateid.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null,"Please enter an ID for the Gate");
        }
        else
        {
        Gate gg = new Gate(gateid.getText(),gateState.getSelectedItem().toString());
        Set_Of_Gates ssg = new Set_Of_Gates();
        for(int i=0;i<sog.size();i++)
        {
            if(setGatesID.getSelectedItem().toString().equals(sog.get(i).getGatesID()))
            {
                ssg=sog.get(i);
                sog.remove(i);
            }
        }
        ssg.addGate(gg);
        sog.add(ssg);
        this.serializeSetOfGates();
        this.toGateTable();
        
        gateid.setText("");
        gateState.setSelectedIndex(0);
        JOptionPane.showMessageDialog(null,"Gate Successfully Added");
        }
    }//GEN-LAST:event_addGateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RFSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RFSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RFSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RFSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RFSV().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addGate;
    private javax.swing.JButton addGatebatch;
    private javax.swing.JButton addOffer;
    private javax.swing.JButton addRoute;
    private javax.swing.JButton addStop;
    private javax.swing.JButton addZone;
    private javax.swing.JButton addcost;
    private javax.swing.JButton addstops;
    private javax.swing.JTextField batchid;
    private javax.swing.JTextField cost;
    private javax.swing.JComboBox endstop;
    private javax.swing.JPanel fare;
    private javax.swing.JTable faretable;
    private javax.swing.JTable gateBatchTable;
    private javax.swing.JComboBox gateState;
    private javax.swing.JTable gateTable;
    private javax.swing.JTextField gateid;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField journeyID;
    private javax.swing.JButton newZone;
    private javax.swing.JTextField offercriteria;
    private javax.swing.JTextField offerdiscount;
    private javax.swing.JTextField offerid;
    private javax.swing.JTable offertable;
    private javax.swing.JComboBox routecombo;
    private javax.swing.JTextField routeid;
    private javax.swing.JTextField routename;
    private javax.swing.JPanel routes;
    private javax.swing.JTable routetable;
    private javax.swing.JComboBox routetype;
    private javax.swing.JTextArea selectedstps;
    private javax.swing.JComboBox setGatesID;
    private javax.swing.JComboBox startstop;
    private javax.swing.JTextField stopID;
    private javax.swing.JTextField stopLat;
    private javax.swing.JTextField stopLon;
    private javax.swing.JTextField stopName;
    private javax.swing.JComboBox stopNames;
    private javax.swing.JTable stopTable;
    private javax.swing.JPanel stops;
    private javax.swing.JComboBox stopscombo;
    private javax.swing.JLabel stpName;
    private javax.swing.JButton updateZone;
    private javax.swing.JPanel vehicles;
    private javax.swing.JComboBox zoneIDs;
    private javax.swing.JTable zoneTable;
    private javax.swing.JTextField zoneidtxt;
    private javax.swing.JTextField zonenametxt;
    private javax.swing.JComboBox zonescombo;
    // End of variables declaration//GEN-END:variables
}
